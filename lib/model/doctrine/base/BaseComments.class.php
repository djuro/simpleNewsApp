<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Comments', 'doctrine');

/**
 * BaseComments
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $user_id
 * @property string $text
 * @property integer $article_id
 * @property timestamp $published_at
 * @property integer $published
 * @property Users $Users
 * @property Articles $Articles
 * 
 * @method integer   getId()           Returns the current record's "id" value
 * @method integer   getUserId()       Returns the current record's "user_id" value
 * @method string    getText()         Returns the current record's "text" value
 * @method integer   getArticleId()    Returns the current record's "article_id" value
 * @method timestamp getPublishedAt()  Returns the current record's "published_at" value
 * @method integer   getPublished()    Returns the current record's "published" value
 * @method Users     getUsers()        Returns the current record's "Users" value
 * @method Articles  getArticles()     Returns the current record's "Articles" value
 * @method Comments  setId()           Sets the current record's "id" value
 * @method Comments  setUserId()       Sets the current record's "user_id" value
 * @method Comments  setText()         Sets the current record's "text" value
 * @method Comments  setArticleId()    Sets the current record's "article_id" value
 * @method Comments  setPublishedAt()  Sets the current record's "published_at" value
 * @method Comments  setPublished()    Sets the current record's "published" value
 * @method Comments  setUsers()        Sets the current record's "Users" value
 * @method Comments  setArticles()     Sets the current record's "Articles" value
 * 
 * @package    simplenews
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseComments extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('comments');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('user_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('text', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('article_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('published_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('published', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Users', array(
             'local' => 'user_id',
             'foreign' => 'id'));

        $this->hasOne('Articles', array(
             'local' => 'article_id',
             'foreign' => 'id'));
    }
}