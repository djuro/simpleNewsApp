<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Tags', 'doctrine');

/**
 * BaseTags
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $text
 * @property integer $article_id
 * @property Articles $Articles
 * 
 * @method integer  getId()         Returns the current record's "id" value
 * @method string   getText()       Returns the current record's "text" value
 * @method integer  getArticleId()  Returns the current record's "article_id" value
 * @method Articles getArticles()   Returns the current record's "Articles" value
 * @method Tags     setId()         Sets the current record's "id" value
 * @method Tags     setText()       Sets the current record's "text" value
 * @method Tags     setArticleId()  Sets the current record's "article_id" value
 * @method Tags     setArticles()   Sets the current record's "Articles" value
 * 
 * @package    simplenews
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseTags extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('tags');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('text', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('article_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Articles', array(
             'local' => 'article_id',
             'foreign' => 'id'));
    }
}