<?php

/**
 * ArticlesTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class ArticlesTable extends Doctrine_Table
{
    /**
     * Returns an instance of this class.
     *
     * @return object ArticlesTable
     */
    public static function getInstance()
    {
        return Doctrine_Core::getTable('Articles');
    }



    /**
     * 'Selecta' po jedan najnoviji clanak iz svake kategorije za prikaz na naslovnoj strani
     * 
     * @return array $result
     */
    public function getLatestFromAllCategories()
    {

      $q = Doctrine_Manager::getInstance()->getCurrentConnection();

      $result = $q->execute("SELECT a.id,a.title,a.text,a.published_at,c.name,c.id AS c_id,a.photo
                             FROM articles a
                             INNER JOIN
                             (SELECT articles.category_id,MAX(articles.published_at) AS latest FROM
                             articles  GROUP BY articles.category_id) b ON
                             a.category_id=b.category_id AND a.published_at=b.latest
                             INNER JOIN categories c ON a.category_id=c.id");
/*
      $result = $this->createQuery('article')
                ->innerJoin('(select a.category_id, MAX(a.published_at) as latest from Articles a group by a.category_id) ' .
                              ' max_article ON article.category_id = max_article.category_id and article.published_at = max_article.published_at')
                ->innerJoin()
   */
      return $result->fetchAll();
    }
    
    
    /**
     * 'Selecta' sve clanke iz odabrane kategorije
     * 
     * @param integer categories.id
     */
    
    public function getAllFromCategory($id)
    {
      //SELECT * FROM `articles` INNER JOIN categories ON articles.category_id=categories.id WHERE categories.id=1
    
      $q = $this->createQuery()
      ->select('a.id,a.title,a.text,a.published_at,c.name')
      ->from('Articles a')
      ->innerJoin('a.Categories c')
      ->where('c.id=?',$id);
      
      return $q->execute();
    }

    
    /**
     * 'Selecta' jedan odabrani clanak
     * 
     * @param integer articles.id
     */

    public function getOneArticle($id)
    {
      $q = $this->createQuery()
      ->select('a.id,a.title,a.text,a.published_at,u.id,p.id,p.name,p.surname')
      ->from('Articles a')
      ->innerJoin('a.Users u')
      //->innerJoin('u.Profiles p')
	  ->leftJoin('a.Comments c')
      ->where('a.id=?',$id);
     
      return $q->fetchOne();
    }
    
     /**
     *  Broji komentare koji pripadaju odabranom clanku
     * 
     * @param integer article_id
     */
    public function countComments($id)
    {
    
     // SELECT count(id) FROM `comments` WHERE article_id=4
     
    $q = $this->createQuery('a')
         ->select('a.id,COUNT(c.article_id) AS cmnts')
         ->from('Articles a')
         ->innerJoin('a.Comments c')
         ->where('c.article_id=?',$id);
         
         return $q->fetchOne();
    
    }
    
    /**
    * 'Selecta' komentare koji pripadaju clanku ciji id se daje kao parametar
    */
    public function getComm($id)
    {
     $q = $this->createQuery('a')
          ->select('a.id,c.text,c.published_at')
          ->from('Articles a')
          ->innerJoin('a.Comments c')
          ->where('c.article_id=?',$id);
     
          return $q->execute();
          
    }
	
	  public function findHisComments($id) {
        return $this->createQuery("as")
                ->leftJoin("as.Comments c")
				->where("as.id=?",$id)
                ->execute();
    }


  /**
  * Selecta sve clanke za backend listu s tim da joina categories i users
  */
   public function getArticlesByCredential()
   {
    $userId = sfContext::getInstance()->getUser()->getAttribute( 'user_id' );

    if(sfContext::getInstance()->getUser()->hasCredential('author')===true):

      $crdntl = 'author';
  
    else:
   
      $crdntl = 'editor';

    endif;
    
    if($crdntl=='editor'):

      $q = $this->createQuery('a')
         ->select('a.id,a.title,a.text,a.published,a.read_count,a.category_id,a.published_at,a.user_id,a.photo,u.name AS u_name,u.surname AS u_surname,c.name AS c_name')
         ->from('Articles a')
         ->innerJoin('a.Users u')
         ->innerJoin('a.Categories c');
      return $q;//->execute();
    
    else:
      
      $q = $this->createQuery('a')
        ->select('a.id,a.title,a.text,a.published,a.read_count,a.category_id,a.published_at,a.user_id,a.photo,u.name AS u_name,u.surname AS u_surname,c.name AS c_name')
        ->from('Articles a')
        ->innerJoin('a.Users u')
        ->innerJoin('a.Categories c')
        ->where('user_id = ?', $userId);
      return $q;//->execute();
    
    endif;
   }


  /**
  * Selecta sve clanke za backend listu koji pripadaju logiranom autoru
  */
   public function getAuthorsArticles()
   {
    $q = $articles->createQuery('a')
        ->select('a.id,a.title,a.text,a.published,a.read_count,a.category_id,a.published_at,a.user_id,a.photo,u.name AS u_name,u.surname AS u_surname,c.name AS c_name')
        ->from('Articles a')
        ->innerJoin('a.Users u')
        ->innerJoin('a.Categories c')
        ->where('user_id = ?', $this->getUser()->getAttribute('id'));
    return $q->execute();
   }
  

}